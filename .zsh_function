function my_1_test_dts() {
	if [[ "$1" == "-" ]]; then
		rm .x.dts.tmp
		rm x.pre.tmp
		rm out.dts

		echo "Success: clean"
		return 0
	fi

	in_dts=$1
	if [[ "$in_dts" == "" ]]; then
		echo "Error: need a in_dts"
		return 1
	fi

	out_dts=out.dts

	cpp -Wp,-MD,x.pre.tmp -nostdinc -I. -I ~/repo/cdp/lagvm/LINUX/android/kernel/msm-4.14/include/ \
		-undef -D__DTS__ -x assembler-with-cpp -o .x.dts.tmp $in_dts
	if [[ "$?" != "0" ]]; then
		return $?
	fi

	dtc -Idts -Odts .x.dts.tmp -o $out_dts 2>&1 | grep -v "Warning" | grep -v "also"
	if [[ "$?" != "0" ]]; then
		return $?
	fi

	echo "Success: $out_dts"
}

function my_2_get_runtime_dts() {
	if [[ "$1" == "-" ]]; then
		rm fdt
		rm fdt.dts

		echo "Success: clean"
		return 0
	fi

	device="$1"

	if [ -e fdt ]; then
		echo "Existing: fdt"
		return 1
	fi

	if [ -e fdt.dts ]; then
		echo "Existing: fdt.dts"
		return 1
	fi

	if [[ "$device" == "" ]]; then
		adb shell "su root cat /sys/firmware/fdt" > fdt
	else
		adb -s "$device" shell "su root cat /sys/firmware/fdt" > fdt
	fi
	if [[ "$?" != "0" ]]; then
		echo 'adb shell "su root cat /sys/firmware/fdt" > fdt'
		rm fdt
		return $?
	fi

	dtc -Idtb -Odts fdt > fdt.dts 2>/dev/null

	echo "Success: fdt.dts"
}

function my_3_view_dtb() {
	dtc -Idtb -Odts $1 | vim
}

function my_4_cat_dtb() {
	dtc -Idtb -Odts $1
}

function wiki() {
	if [ -e  ~/my/link/wiki ]; then
		cd ~/my/link/wiki
		vim README.md
	else
		echo no wiki link
	fi
}

function cdd() {
	if [ -f "$1" ]; then
		cd "$(dirname $1)"
	else
		cd "$1"
	fi
}

function retmux() {
	tmux -2 has-session -t $1 2>/dev/null
	if [[ "$?" == "0" ]]; then
		tmux -2 attach-session -t $1
	else
		tmux -2 new-session -t $1
	fi
}

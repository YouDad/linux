#!/bin/bash

if [[ "$HOME" == "" ]]; then
	if [[ "$(whoami)" == "root" ]]; then
		HOME=/root
	else
		HOME=/home/$(whoami)
	fi
fi

function usage() {
	cat <<- _EOF_
		install
		remove
		reinstall
		list
	_EOF_
}

function get_function() {
	cmd="egrep \"function [a-zA-Z0-9_]+\(\) {\" $0"
	cmd="$cmd | cut -d ' ' -f 2 | cut -d '(' -f 1"
	eval $cmd
}

function usage_install() {
	get_function | egrep "^install" | sed "s/install_/install /g"
}

function usage_remove() {
	get_function | egrep "^remove" | sed "s/remove_/remove /g"
}

function usage_reinstall() {
	get_function | egrep "^reinstall" | sed "s/reinstall_/reinstall /g"
}

function usage_list() {
	echo "install:"
	usage_install
	echo -e "\nremove:"
	usage_remove
	echo -e "\nreinstall:"
	usage_reinstall
}

function check_retval() {
	if [[ $? != 0 ]]; then
		echo "ins: $1 failed"
		exit $?
	fi
}

function need_dir() {
	dir_name=$1
	if [ ! -d $dir_name ]; then
		mkdir $dir_name
		check_retval "need dir: $dir_name"
	fi
}

function check_dir() {
	dir_name=$1
	if [ -d $dir_name ]; then
		echo "already exist dir: $dir_name"
		exit 1
	fi
}

function reinstall_zsh_powerlevel9k() {
	remove_zsh_powerlevel9k
	install_zsh_powerlevel9k
}

function remove_zsh_powerlevel9k() {
	need_dir $HOME/My/src
	rm -rf $HOME/My/src/powerlevel9k
	check_retval "rm -rf $HOME/My/src/powerlevel9k"
}

function install_zsh_powerlevel9k() {
	path=$HOME/My/src/powerlevel9k
	need_dir $HOME/My/src
	check_dir $path

	git clone https://github.com/bhilburn/powerlevel9k.git $path
	check_retval "git clone https://github.com/bhilburn/powerlevel9k.git $path"

	url=https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/DroidSansMono.zip
	wget $url
	check_retval "wget $url"

	unzip DroidSansMono.zip
	check_retval "unzip DroidSansMono.zip"

	rm DroidSansMono.zip
	check_retval "rm DroidSansMono.zip"

	sudo mv Droid* /usr/share/fonts/opentype
	check_retval "sudo mv Droid* /usr/share/fonts/opentype"

	sudo aptitude install fontconfig
	check_retval "sudo aptitude install fontconfig"

	sudo fc-cache -fv /usr/share/fonts/opentype
	check_retval "sudo fc-cache -fv /usr/share/fonts/opentype"
}

function reinstall_zsh_dracula() {
	remove_zsh_dracula
	install_zsh_dracula
}

function remove_zsh_dracula() {
	need_dir $HOME/My/src
	rm -rf $HOME/My/src/zsh_dracula
	check_retval "rm -rf $HOME/My/src/zsh_dracula"
}

function install_zsh_dracula() {
	path=$HOME/My/src/zsh_dracula
	need_dir $HOME/My/src
	check_dir $path

	git clone https://github.com/dracula/zsh.git $path
	check_retval "git clone https://github.com/dracula/zsh.git $path"

	ln -sf $path/dracula.zsh-theme $HOME/.oh-my-zsh/themes/dracula.zsh-theme
	check_retval "ln -sf $path/dracula.zsh-theme $HOME/.oh-my-zsh/themes/dracula.zsh-theme"
}

function reinstall_zsh_autosuggestions() {
	remove_zsh_autosuggestions
	install_zsh_autosuggestions
}

function remove_zsh_autosuggestions() {
	rm -rf $HOME/.oh-my-zsh/plugins/zsh-autosuggestions
}

function install_zsh_autosuggestions() {
	git clone git://github.com/zsh-users/zsh-autosuggestions $HOME/.oh-my-zsh/plugins/zsh-autosuggestions
}

function reinstall_nodejs() {
	remove_nodejs
	install_nodejs
}

function remove_nodejs() {
	need_dir $HOME/My/src
	rm -rf $HOME/My/src/nodejs
	check_retval "rm -rf $HOME/My/src/nodejs"
	sudo rm /usr/bin/npm /usr/bin/node
}

function install_nodejs() {
	need_dir $HOME/My/src
	check_dir $HOME/My/src/nodejs
	url=https://npm.taobao.org/mirrors/node/v12.10.0/node-v12.10.0-linux-x64.tar.xz

	cd $HOME
	check_retval "cd $HOME"

	wget $url
	check_retval "wget $url"

	tar -axf node-v12.10.0-linux-x64.tar.xz
	check_retval "tar -axvf node-v12.10.0-linux-x64.tar.xz"

	mv node-v12.10.0-linux-x64 nodejs
	check_retval "mv node-v12.10.0-linux-x64 nodejs"

	mv nodejs $HOME/My/src
	check_retval "mv nodejs $HOME/My/src"

	sudo ln -s $HOME/My/src/nodejs/bin/npm /usr/bin/
	check_retval "sudo ln -s $HOME/My/src/nodejs/bin/npm /usr/bin/"

	sudo ln -s $HOME/My/src/nodejs/bin/node /usr/bin/
	check_retval "sudo ln -s $HOME/My/src/nodejs/bin/node /usr/bin/"

	rm node-v12.10.0-linux-x64.tar.xz
	check_retval "rm node-v12.10.0-linux-x64.tar.xz"
}

function install_neovim() {
    sudo add-apt-repository -y ppa:neovim-ppa/stable
    sudo aptitude install neovim
    sudo ln -s /usr/bin/nvim /usr/bin/vim
}

function install_rg() {
	curl https://sh.rustup.rs -sSf | sh
	source $HOME/.cargo/env
	git clone https://github.com/BurntSushi/ripgrep ~/My/src/
	cd ~/My/src/ripgrep
	cargo build --release
}

function install_aptitude() {
	sudo apt install aptitude
	check_retval "sudo apt install aptitude"

	sudo aptitude install cscope ctags fontconfig aria2
	check_retval "sudo aptitude install cscope ctags fontconfig aria2"
}

function install_zsh_h() {
	git clone git@github.com:paoloantinori/hhighlighter.git $HOME/.oh-my-zsh/plugins/h
	mv $HOME/.oh-my-zsh/plugins/h/h.sh $HOME/.oh-my-zsh/plugins/h/h.plugin.zsh
}

function install_lazygit() {
	sudo add-apt-repository -y -u ppa:lazygit-team/release
	sudo aptitude install lazygit
}

function main() {
	if [[ $1 == "" ]]; then
		usage
		exit 0
	fi

	if [[ $2 == "" ]]; then
		eval usage_$1
		exit 0
	fi

	eval $1_$2
}

main $*
